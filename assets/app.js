 /* JS content inserted (same as previous long JS) */
const LS = {products:'sk_products',categories:'sk_categories',transactions:'sk_transactions',shop:'sk_shop',users:'sk_users',printer:'sk_printer'};
function seedIfEmpty(){if(!localStorage.getItem(LS.categories)){localStorage.setItem(LS.categories, JSON.stringify([{id:1,name:'Semua'},{id:2,name:'Minuman'},{id:3,name:'Makanan'},{id:4,name:'Lainnya'}]));}
if(!localStorage.getItem(LS.products)){localStorage.setItem(LS.products, JSON.stringify([{id:1,name:'Air Mineral 600ml',price:5000,cost:3000,stock:20,cat:2,min:5,active:true},{id:2,name:'Teh Botol',price:7000,cost:4000,stock:12,cat:2,min:5,active:true},{id:3,name:'Roti Cokelat',price:8000,cost:5000,stock:8,cat:3,min:3,active:true},{id:4,name:'Mi Instan',price:3500,cost:2000,stock:30,cat:3,min:10,active:true},{id:5,name:'Tisu Saku',price:4000,cost:2500,stock:15,cat:4,min:5,active:true},]));}
if(!localStorage.getItem(LS.transactions)){localStorage.setItem(LS.transactions, JSON.stringify([]));}
if(!localStorage.getItem(LS.shop)){localStorage.setItem(LS.shop, JSON.stringify({name:'Toko Contoh', phone:'', address:'', currency:'Rp'}));}
if(!localStorage.getItem(LS.users)){localStorage.setItem(LS.users, JSON.stringify([{id:1, username:'owner', password:'owner', role:'owner'},{id:2, username:'kasir', password:'kasir', role:'cashier'}]));}
if(!localStorage.getItem(LS.printer)){localStorage.setItem(LS.printer, JSON.stringify({paired:false, name:''}));}}
seedIfEmpty();
const $=s=>document.querySelector(s), $$=s=>[...document.querySelectorAll(s)];
function money(n,curr='Rp'){return `${curr} ${Number(n||0).toLocaleString('id-ID')}`}
function getProducts(){return JSON.parse(localStorage.getItem(LS.products)||'[]')}
function setProducts(a){localStorage.setItem(LS.products, JSON.stringify(a))}
function getCategories(){return JSON.parse(localStorage.getItem(LS.categories)||'[]')}
function setCategories(a){localStorage.setItem(LS.categories, JSON.stringify(a))}
function getTx(){return JSON.parse(localStorage.getItem(LS.transactions)||'[]')}
function setTx(a){localStorage.setItem(LS.transactions, JSON.stringify(a))}
function shop(){return JSON.parse(localStorage.getItem(LS.shop)||'{}')}
function setShop(s){localStorage.setItem(LS.shop, JSON.stringify(s))}
function printer(){return JSON.parse(localStorage.getItem(LS.printer)||'{}')}
function setPrinter(p){localStorage.setItem(LS.printer, JSON.stringify(p))}
function go(h){window.location.href=h}
function initLogin(){const f=$('#loginForm'); if(!f)return; f.addEventListener('submit',e=>{e.preventDefault();const u=f.username.value.trim(); const p=f.password.value.trim(); const users=JSON.parse(localStorage.getItem(LS.users)||'[]'); const m=users.find(x=>x.username===u&&x.password===p); if(!m){alert('Username/Password salah');return;} sessionStorage.setItem('sk_user', JSON.stringify(m)); go('dashboard.html');});}
function initDashboard(){if(!$('#dashboard'))return; const tx=getTx(); const prod=getProducts(); const today=new Date().toISOString().slice(0,10); const s=shop(); $('#shopName').innerText=s.name||'Smart Kasir'; const todaySum=tx.filter(t=>t.date?.slice(0,10)===today).reduce((a,b)=>a+(b.final||0),0); $('#kpiSales').innerText=money(todaySum, s.currency); $('#kpiTx').innerText=tx.filter(t=>t.date?.slice(0,10)===today).length; const low=prod.filter(p=>p.active&&p.stock<=p.min).length; $('#kpiLow').innerText=low;}
let CART={items:[],discount:0};
function addToCart(id){const p=getProducts().find(p=>p.id==id&&p.active); if(!p)return; const ex=CART.items.find(i=>i.id==id); if(ex){ex.qty++;}else{CART.items.push({id:p.id,name:p.name,price:p.price,qty:1,disc:0});} renderCart();}
function changeQty(id,d){const it=CART.items.find(i=>i.id==id); if(!it)return; it.qty=Math.max(1, it.qty+d); renderCart();}
function removeItem(id){CART.items=CART.items.filter(i=>i.id!=id); renderCart();}
function totals(){const sub=CART.items.reduce((a,b)=>a+(b.price*b.qty-(b.disc||0)),0); const final=Math.max(0, sub-(CART.discount||0)); return {sub,final};}
function renderCart(){const wrap=$('#cartItems'); if(!wrap)return; wrap.innerHTML=''; CART.items.forEach(i=>{const row=document.createElement('div'); row.className='cart-item'; row.innerHTML=`<div><div>${i.name}</div><div class="small">${money(i.price)} × ${i.qty}</div></div><div class="qty"><button class="btn" onclick="changeQty(${i.id},-1)">−</button><button class="btn" onclick="changeQty(${i.id},1)">+</button><button class="btn" onclick="removeItem(${i.id})">Hapus</button></div>`; wrap.appendChild(row);}); const t=totals(); $('#subtotal').innerText=money(t.sub, shop().currency); $('#final').innerText=money(t.final, shop().currency);}
function initPOS(){if(!$('#pos'))return; const s=shop(); $('#shopName').innerText=s.name||'Smart Kasir'; const chips=$('#chips'); const cats=getCategories(); chips.innerHTML=''; cats.forEach((c,idx)=>{const el=document.createElement('div'); el.className='chip'+(idx===0?' active':''); el.dataset.cat=c.id; el.innerText=c.name; el.onclick=()=>{$$('#chips .chip').forEach(x=>x.classList.remove('active')); el.classList.add('active'); renderProducts();}; chips.appendChild(el);}); $('#search').addEventListener('input', renderProducts); renderProducts(); renderCart(); $('#payBtn').addEventListener('click',()=>{if(CART.items.length===0){alert('Keranjang kosong');return;} $('#payModal').classList.add('open'); $('#cashInput').value=''; $('#changeView').innerText=money(0,s.currency);}); $('#cashInput').addEventListener('input',()=>{const cash=parseInt($('#cashInput').value||0,10); const change=cash - totals().final; $('#changeView').innerText=money(change>0?change:0, s.currency);}); $('#finishPay').addEventListener('click',()=>{const t={id:Date.now(), date:new Date().toISOString(), items:CART.items.map(i=>({...i})), subtotal:totals().sub, discount:CART.discount||0, final:totals().final, method: $('input[name="payMethod"]:checked')?.value||'cash', cashReceived: parseInt($('#cashInput').value||0,10)||null}; const tx=getTx(); tx.unshift(t); setTx(tx); const products=getProducts(); t.items.forEach(it=>{const p=products.find(pp=>pp.id===it.id); if(p){p.stock=Math.max(0,(p.stock||0)-it.qty);} }); setProducts(products); CART={items:[],discount:0}; renderCart(); $('#payModal').classList.remove('open'); alert('Transaksi selesai. Struk siap dicetak/dibagikan.');}); $('#closePay').addEventListener('click',()=>$('#payModal').classList.remove('open'));}
function renderProducts(){const list=$('#prodGrid'); if(!list)return; const term=($('#search')?.value||'').toLowerCase(); const activeCat=Number(($$('.chip.active')[0]?.dataset.cat)||1); const data=getProducts().filter(p=>p.active); const filtered=data.filter(p=>{const byCat=activeCat===1 || p.cat===activeCat; const byTerm=!term || p.name.toLowerCase().includes(term); return byCat && byTerm;}); list.innerHTML=''; filtered.forEach(p=>{const low=p.stock<=p.min; const card=document.createElement('div'); card.className='product-card'; card.innerHTML=`<div class="product-name">${p.name}</div><div class="row space-between"><div class="product-price">${money(p.price, shop().currency)}</div><div class="product-stock">${p.stock} stok ${low?'<span class="badge" style="border-color:var(--warn);color:#92400e">Menipis</span>':''}</div></div><button class="btn block" onclick="addToCart(${p.id})">+ Tambah</button>`; list.appendChild(card);});}
function initProducts(){if(!$('#products'))return; const list=$('#prodList'); const search=$('#pSearch'); function render(){const term=(search.value||'').toLowerCase(); const data=getProducts().filter(p=>term? p.name.toLowerCase().includes(term):true); list.innerHTML=''; data.forEach(p=>{const row=document.createElement('div'); row.className='item'; row.innerHTML=`<div class="row space-between"><div><b>${p.name}</b><div class="sub">${money(p.price)} · Stok ${p.stock} · ${p.active?'Aktif':'Nonaktif'}</div></div><div class="row"><button class="btn" onclick="go('product_form.html?id=${p.id}')">Edit</button><button class="btn" onclick="toggleActive(${p.id})">${p.active?'Nonaktifkan':'Aktifkan'}</button></div></div>`; list.appendChild(row);});}
  window.toggleActive = (id)=>{const arr=getProducts(); const p=arr.find(x=>x.id===id); if(!p)return; p.active=!p.active; setProducts(arr); render();}
  render(); search.addEventListener('input', render); $('#addProduct').addEventListener('click', ()=>go('product_form.html'));}
function initProductForm(){if(!$('#productForm'))return; const form=$('#productForm'); const params=new URLSearchParams(location.search); const id=Number(params.get('id')); if(id){const p=getProducts().find(x=>x.id===id); if(p){form.pid.value=p.id; form.name.value=p.name; form.price.value=p.price; form.cost.value=p.cost||0; form.stock.value=p.stock; form.cat.value=p.cat; form.min.value=p.min||5;}}
  getCategories().forEach(c=>{if(c.id===1)return; const opt=document.createElement('option'); opt.value=c.id; opt.textContent=c.name; form.cat.appendChild(opt);});
  form.addEventListener('submit', e=>{e.preventDefault(); const arr=getProducts(); const payload={id: form.pid.value? Number(form.pid.value): (arr.reduce((m,x)=>Math.max(m,x.id),0)+1), name: form.name.value.trim(), price: Number(form.price.value||0), cost: Number(form.cost.value||0), stock: Number(form.stock.value||0), cat: Number(form.cat.value||4), min: Number(form.min.value||5), active:true}; const idx=arr.findIndex(x=>x.id===payload.id); if(idx>=0) arr[idx]=payload; else arr.push(payload); setProducts(arr); alert('Produk disimpan'); go('products.html');});}
function initCategories(){if(!$('#categories'))return; const list=$('#catList'); function render(){list.innerHTML=''; getCategories().forEach(c=>{const row=document.createElement('div'); row.className='item'; row.innerHTML=`<div class="row space-between"><div><b>${c.name}</b></div></div>`; list.appendChild(row);});}
  render(); $('#catForm').addEventListener('submit', e=>{e.preventDefault(); const name=$('#catName').value.trim(); if(!name)return; const arr=getCategories(); const id=arr.reduce((m,x)=>Math.max(m,x.id),0)+1; arr.push({id,name}); setCategories(arr); $('#catName').value=''; render();});}
function initTransactions(){if(!$('#transactions'))return; const list=$('#txList'); function render(){const data=getTx(); list.innerHTML=''; if(!data.length){list.innerHTML=`<div class="empty">Belum ada transaksi</div>`; return} data.forEach(t=>{const row=document.createElement('div'); row.className='item'; row.innerHTML=`<div class="row space-between"><div><b>#${t.id}</b><div class="sub">${new Date(t.date).toLocaleString('id-ID')}</div></div><div class="row"><div class="badge">${t.method}</div><div style="width:8px"></div><div><b>${money(t.final, shop().currency)}</b></div></div></div><div class="row" style="margin-top:8px"><button class="btn" onclick="go('transaction_detail.html?id=${t.id}')">Detail</button></div>`; list.appendChild(row);});}
  render();}
function initTransactionDetail(){if(!$('#txDetail'))return; const params=new URLSearchParams(location.search); const id=Number(params.get('id')); const t=getTx().find(x=>x.id===id); if(!t){$('#txBody').innerHTML=`<div class="empty">Transaksi tidak ditemukan</div>`; return} $('#txTitle').innerText=`#${t.id}`; $('#txMeta').innerText=`${new Date(t.date).toLocaleString('id-ID')} · ${t.method}`; const list=document.createElement('div'); list.className='list'; t.items.forEach(i=>{const it=document.createElement('div'); it.className='item'; it.innerHTML=`<div class="row space-between"><div>${i.name} × ${i.qty}</div><div>${money(i.price*i.qty, shop().currency)}</div></div>`; list.appendChild(it);}); $('#txBody').appendChild(list); $('#txSummary').innerHTML=`<div class="row space-between"><div>Subtotal</div><div>${money(t.subtotal, shop().currency)}</div></div><div class="row space-between"><div>Diskon</div><div>${money(t.discount, shop().currency)}</div></div><div class="row space-between"><div><b>Total</b></div><div><b>${money(t.final, shop().currency)}</b></div></div>`;}
function initReports(){if(!$('#reports'))return; const data=getTx(); const sum=data.reduce((a,b)=>a+(b.final||0),0); $('#repSales').innerText=money(sum, shop().currency); $('#repCount').innerText=data.length; const agg={}; data.forEach(t=> t.items.forEach(i=> agg[i.name]=(agg[i.name]||0)+i.qty )); const top=Object.entries(agg).sort((a,b)=>b[1]-a[1]).slice(0,5); const ul=$('#topProducts'); if(!top.length){ul.innerHTML=`<div class="empty">Belum ada data produk terlaris</div>`;} else {ul.innerHTML=''; top.forEach(([name,qty])=>{const li=document.createElement('div'); li.className='row space-between item'; li.innerHTML=`<div>${name}</div><div>${qty}x</div>`; ul.appendChild(li);});} $('#exportBtn')?.addEventListener('click', ()=>{const blob=new Blob([JSON.stringify(data,null,2)], {type:'application/json'}); const a=document.createElement('a'); a.href=URL.createObjectURL(blob); a.download='laporan-penjualan.json'; a.click();});}
function initSettings(){if(!$('#settings'))return; const s=shop(); $('#shopName').value=s.name||''; $('#shopPhone').value=s.phone||''; $('#shopAddress').value=s.address||''; $('#shopCurrency').value=s.currency||'Rp'; $('#shopForm').addEventListener('submit', e=>{e.preventDefault(); setShop({name:$('#shopName').value.trim(), phone:$('#shopPhone').value.trim(), address:$('#shopAddress').value.trim(), currency:$('#shopCurrency').value.trim()||'Rp'}); alert('Pengaturan disimpan');});}
function initPrinter(){if(!$('#printer'))return; function render(){const p=printer(); $('#printerState').innerText=p.paired?`Terhubung ke ${p.name}`:'Belum terhubung'; $('#pairBtn').innerText=p.paired?'Putuskan':'Pair Perangkat';} render(); $('#pairBtn').addEventListener('click', ()=>{const p=printer(); if(p.paired){ setPrinter({paired:false, name:''}); } else { const name=prompt('Masukkan nama perangkat printer (contoh: BT-Thermal-001)'); if(name) setPrinter({paired:true, name}); } render();});}
function initBackup(){if(!$('#backup'))return; $('#doBackup').addEventListener('click', ()=>{const dump={products:getProducts(),categories:getCategories(),transactions:getTx(),shop:shop(),printer:printer()}; const blob=new Blob([JSON.stringify(dump)], {type:'application/json'}); const a=document.createElement('a'); a.href=URL.createObjectURL(blob); a.download='smart-kasir-backup.json'; a.click();}); $('#doRestore').addEventListener('change', e=>{const file=e.target.files[0]; if(!file)return; const reader=new FileReader(); reader.onload=()=>{try{const d=JSON.parse(reader.result); if(d.products) setProducts(d.products); if(d.categories) setCategories(d.categories); if(d.transactions) setTx(d.transactions); if(d.shop) setShop(d.shop); if(d.printer) setPrinter(d.printer); alert('Restore berhasil');}catch(err){alert('Restore gagal: format tidak valid')}}; reader.readAsText(file);});}
document.addEventListener('DOMContentLoaded', ()=>{initLogin();initDashboard();initPOS();initProducts();initProductForm();initCategories();initTransactions();initTransactionDetail();initReports();initSettings();initPrinter();initBackup();}); 